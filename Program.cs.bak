using System.IO;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Hosting;
using Orleans.Hosting;
using ProofService.interfaces;
using ZkProof.Grains;

class Program
{
    static async Task Main(string[] args)
    {
        // var builder = new ConfigurationBuilder()
        //     .SetBasePath(Directory.GetCurrentDirectory())
        //     .AddJsonFile("appsettings.json", optional: false, reloadOnChange: true);
        // var configuration = builder.Build();
        var host = new HostBuilder()
            .UseOrleans((ctx, siloBuilder) =>
            {

                // In order to support multiple hosts forming a cluster, they must listen on different ports.
                // Use the --InstanceId X option to launch subsequent hosts.
                // var instanceId = ctx.Configuration.GetValue<int>("InstanceId");
                var port = 11_111;
                siloBuilder.UseLocalhostClustering(
                    siloPort: port,
                    gatewayPort: 30000
                    // primarySiloEndpoint: new IPEndPoint(IPAddress.Any, port)
                );
            })
            .ConfigureWebHostDefaults(webBuilder =>
            {
                webBuilder.UseStartup<Startup>();
                // webBuilder.ConfigureKestrel((ctx, kestrelOptions) =>
                // {
                //     // To avoid port conflicts, each Web server must listen on a different port.
                //     // var instanceId = ctx.Configuration.GetValue<int>("InstanceId");
                //     kestrelOptions.ListenLocalhost(7020);
                // });
            })
            // .ConfigureServices(services =>
            // {
                // services.Configure<ZkProverSetting>(configuration.GetSection("ProverSetting"));
                // services.Configure<ContractClient>(configuration.GetSection("ContractClient"));
            // })
            .Build();

        await host.StartAsync();

        await Task.Delay(-1);
        
        // await Host.CreateDefaultBuilder(args)
        //     .UseOrleans((ctx, siloBuilder) =>
        //     {
        //         
        //         // In order to support multiple hosts forming a cluster, they must listen on different ports.
        //         // Use the --InstanceId X option to launch subsequent hosts.
        //         // var instanceId = ctx.Configuration.GetValue<int>("InstanceId");
        //         var port = 11_111;
        //         siloBuilder.UseLocalhostClustering(
        //             siloPort: port,
        //             gatewayPort: 30000
        //             // primarySiloEndpoint: new IPEndPoint(IPAddress.Any, port)
        //         );
        //     })
        //     .ConfigureWebHostDefaults(webBuilder =>
        //     {
        //         webBuilder.UseStartup<Startup>();
        //         webBuilder.ConfigureKestrel((ctx, kestrelOptions) =>
        //         {
        //             // To avoid port conflicts, each Web server must listen on a different port.
        //             // var instanceId = ctx.Configuration.GetValue<int>("InstanceId");
        //             kestrelOptions.ListenLocalhost(7020);
        //         });
        //     })
        //     .ConfigureServices(services =>
        //     {
        //         // services.Configure<ZkProverSetting>(configuration.GetSection("ProverSetting"));
        //         // services.Configure<ContractClient>(configuration.GetSection("ContractClient"));
        //     })
        //     .RunConsoleAsync();
    }
}
